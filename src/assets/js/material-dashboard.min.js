isWindows = -1 < navigator.platform.indexOf("Win"), isWindows ? ($(".sidebar .sidebar-wrapper, .main-panel").perfectScrollbar(), $("html").addClass("perfect-scrollbar-on")) : $("html").addClass("perfect-scrollbar-off");
var breakCards = !0,
	searchVisible = 0,
	transparent = !0,
	transparentDemo = !0,
	fixedTop = !1,
	mobile_menu_visible = 0,
	mobile_menu_initialized = !1,
	toggle_initialized = !1,
	bootstrap_nav_initialized = !1,
	seq = 0,
	delays = 80,
	durations = 500,
	seq2 = 0,
	delays2 = 80,
	durations2 = 500;

function debounce(i, n, t) {
	var r;
	return function () {
		var e = this,
			a = arguments;
		clearTimeout(r), r = setTimeout(function () {
			r = null, t || i.apply(e, a)
		}, n), t && !r && i.apply(e, a)
	}
}
$(document).ready(function () {
	$("body").bootstrapMaterialDesign(), $sidebar = $(".sidebar"), md.initSidebarsCheck(), window_width = $(window).width(), md.checkSidebarImage(), 0 != $(".selectpicker").length && $(".selectpicker").selectpicker(), $('[rel="tooltip"]').tooltip(), $(".form-control").on("focus", function () {
		$(this).parent(".input-group").addClass("input-group-focus")
	}).on("blur", function () {
		$(this).parent(".input-group").removeClass("input-group-focus")
	}), $('input[type="checkbox"][required="true"], input[type="radio"][required="true"]').on("click", function () {
		$(this).hasClass("error") && $(this).closest("div").removeClass("has-error")
	})
}), $(document).on("click", ".navbar-toggler", function () {
	if ($toggle = $(this), 1 == mobile_menu_visible) $("html").removeClass("nav-open"), $(".close-layer").remove(), setTimeout(function () {
		$toggle.removeClass("toggled")
	}, 400), mobile_menu_visible = 0;
	else {
		setTimeout(function () {
			$toggle.addClass("toggled")
		}, 430);
		var e = $('<div class="close-layer"></div>');
		0 != $("body").find(".main-panel").length ? e.appendTo(".main-panel") : $("body").hasClass("off-canvas-sidebar") && e.appendTo(".wrapper-full-page"), setTimeout(function () {
			e.addClass("visible")
		}, 100), e.click(function () {
			$("html").removeClass("nav-open"), mobile_menu_visible = 0, e.removeClass("visible"), setTimeout(function () {
				e.remove(), $toggle.removeClass("toggled")
			}, 400)
		}), $("html").addClass("nav-open"), mobile_menu_visible = 1
	}
}), $(window).resize(function () {
	md.initSidebarsCheck(), seq = seq2 = 0, setTimeout(function () {
		md.initDashboardPageCharts()
	}, 500)
}), md = {
	misc: {
		navbar_menu_visible: 0,
		active_collapse: !0,
		disabled_collapse_init: 0
	},
	checkSidebarImage: function () {
		$sidebar = $(".sidebar"), image_src = $sidebar.data("image"), void 0 !== image_src && (sidebar_container = '<div class="sidebar-background" style="background-image: url(' + image_src + ') "/>', $sidebar.append(sidebar_container))
	},
	initFormExtendedDatetimepickers: function () {
		$(".datetimepicker").datetimepicker({
			icons: {
				time: "fa fa-clock-o",
				date: "fa fa-calendar",
				up: "fa fa-chevron-up",
				down: "fa fa-chevron-down",
				previous: "fa fa-chevron-left",
				next: "fa fa-chevron-right",
				today: "fa fa-screenshot",
				clear: "fa fa-trash",
				close: "fa fa-remove"
			}
		}), $(".datepicker").datetimepicker({
			format: "MM/DD/YYYY",
			icons: {
				time: "fa fa-clock-o",
				date: "fa fa-calendar",
				up: "fa fa-chevron-up",
				down: "fa fa-chevron-down",
				previous: "fa fa-chevron-left",
				next: "fa fa-chevron-right",
				today: "fa fa-screenshot",
				clear: "fa fa-trash",
				close: "fa fa-remove"
			}
		}), $(".timepicker").datetimepicker({
			format: "h:mm A",
			icons: {
				time: "fa fa-clock-o",
				date: "fa fa-calendar",
				up: "fa fa-chevron-up",
				down: "fa fa-chevron-down",
				previous: "fa fa-chevron-left",
				next: "fa fa-chevron-right",
				today: "fa fa-screenshot",
				clear: "fa fa-trash",
				close: "fa fa-remove"
			}
		})
	},
	initSliders: function () {
		var e = document.getElementById("sliderRegular");
		noUiSlider.create(e, {
			start: 40,
			connect: [!0, !1],
			range: {
				min: 0,
				max: 100
			}
		});
		var a = document.getElementById("sliderDouble");
		noUiSlider.create(a, {
			start: [20, 60],
			connect: !0,
			range: {
				min: 0,
				max: 100
			}
		})
	},
	initSidebarsCheck: function () {
		$(window).width() <= 991 && 0 != $sidebar.length && md.initRightMenu()
	},
	initDashboardPageCharts: function () {
		if (0 != $("#clientes-mes-chart").length || 0 != $("#completedTasksChart").length || 0 != $("#recebimentos-mes-chart").length) {
			// =-=-=-=-=-=-=-=-=-=-
			// Gráfico de clientes
			// =-=-=-=-=-=-=-=-=-=-
			$.ajax({
				type: "POST",
				url: "/admin/preencher/clientes-mes-chart",
				success: function (data) {
					data = $.parseJSON(data);
					data = data[0];
					if (data != null && data != '') {
						c_obj = {
							"jan": data['cJaneiro'],
							"fev": data['cFevereiro'],
							"mar": data['cMarco'],
							"abr": data['cAbril'],
							"mai": data['cMaio'],
							"jun": data['cJunho'],
							"jul": data['cJulho'],
							"ago": data['cAgosto'],
							"set": data['cSetembro'],
							"out": data['cOutubro'],
							"nov": data['cNovembro'],
							"dez": data['cDezembro'],
							"diferencial": data['diferencial'],
							"total": data['total']
						}
						if (c_obj['diferencial'] == null) {
							c_obj['diferencial'] = 100;
						}
					} else {
						c_obj = {
							"jan": null, "fev": null, "mar": null, "abr": null, "mai": null, "jun": null, "jul": null, "ago": null, "set": null, "out": null, "nov": null, "dez": null, "diferencial": 0, "total": 10
						}
					}
					porcentagem = c_obj['diferencial']
					$("#clientes-mes-chart-increase").html('<i class="fa fa-long-arrow-up"></i> ' + parseFloat(porcentagem).toFixed(2) + '%');
				},
				error: function () {
					console.log("Erro - Não foi possível extrair dados do banco de dados.");
				},
				async: false
			});
			dataClientesMesChart = {
				labels: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
				series: [
					[c_obj['jan'], c_obj['fev'], c_obj['mar'], c_obj['abr'], c_obj['mai'], c_obj['jun'], c_obj['jul'], c_obj['ago'], c_obj['set'], c_obj['out'], c_obj['nov'], c_obj['dez']]
				]
			}, optionsClientesMesChart = {
				lineSmooth: Chartist.Interpolation.cardinal({
					tension: 0
				}),
				low: 0,
				high: parseInt(c_obj['total'], 10) + 1,
				chartPadding: {
					top: 0,
					right: 0,
					bottom: 0,
					left: 0
				},
				plugins: [
					Chartist.plugins.ctPointLabels({
						textAnchor: 'middle',
						labelInterpolationFnc: function (value) { return value }
					})
				]
			};
			var e = new Chartist.Line("#clientes-mes-chart", dataClientesMesChart, optionsClientesMesChart);
			md.startAnimationForBarChart(e)
			// =-=-=-=-=-=-=-=-=-=-
			// ./Gráfico de clientes
			// =-=-=-=-=-=-=-=-=-=-

			// md.startAnimationForLineChart(e), dataCompletedTasksChart = {
			// 	labels: ["12p", "3p", "6p", "9p", "12p", "3a", "6a", "9a"],
			// 	series: [
			// 		[230, 750, 450, 300, 280, 240, 200, 190]
			// 	]
			// }, optionsCompletedTasksChart = {
			// 	lineSmooth: Chartist.Interpolation.cardinal({
			// 		tension: 0
			// 	}),
			// 	low: 0,
			// 	high: 1e3,
			// 	chartPadding: {
			// 		top: 0,
			// 		right: 0,
			// 		bottom: 0,
			// 		left: 0
			// 	}
			// };
			// var a = new Chartist.Line("#completedTasksChart", dataCompletedTasksChart, optionsCompletedTasksChart);
			// md.startAnimationForLineChart(a);

			// =-=-=-=-=-=-=-=-=-=-
			// Gráfico de pagamentos
			// =-=-=-=-=-=-=-=-=-=-
			$.ajax({
				type: "POST",
				url: "/admin/preencher/recebimentos-mes-chart",
				success: function (f) {
					f = $.parseJSON(f);
					f = f[0];
					if (f != null && f != '') {
						if (f['valor_anterior'] == null) {
							f['valor_anterior'] = 0;
							f['multiplicador'] = 0;
							f['porcentagem'] = 100;
							f['diferencial'] = f['valor_atual'];
						}
						p_obj = {
							"jan": f['jan'],
							"fev": f['fev'],
							"mar": f['mar'],
							"abr": f['abr'],
							"mai": f['mai'],
							"jun": f['jun'],
							"jul": f['jul'],
							"ago": f['ago'],
							"set": f['_set'],
							"out": f['_out'],
							"nov": f['nov'],
							"dez": f['dez'],
							"valor_atual": f['valor_atual'],
							"valor_anterior": f['valor_anterior'],
							"multiplicador": f['multiplicador'],
							"porcentagem": f['porcentagem'],
							"diferencial": f['diferencial'],
							"maior_valor": f['maior_valor']
						}
					} else {
						p_obj = {
							"jan": null, "fev": null, "mar": null, "abr": null, "mai": null, "jun": null, "jul": null, "ago": null, "set": null, "out": null, "nov": null, "dez": null, "valor_atual": 0, "valor_anterior": 0, "multiplicador": 0, "porcentagem": 0, "diferencial": 0, "maior_valor": 0
						}
					}
					porcentagem = p_obj['porcentagem'];
					if (p_obj['diferencial'] > 0) {
						$("#recebimentos-mes-chart-increase").html('<i class="fa fa-long-arrow-up"></i> ' + parseFloat(porcentagem).toFixed(2) + '% (R$ ' + f['diferencial'] + ")");
					} else if (p_obj['diferencial'] == 0) {
						$("#recebimentos-mes-chart-increase").html('<i class="fa fa-long-arrow-right"></i> ' + parseFloat(porcentagem).toFixed(2) + '% (R$ ' + f['diferencial'] + ")");
					} else {
						porcentagem = 100 - porcentagem
						$("#recebimentos-mes-chart-increase").html('<i class="fa fa-long-arrow-down"></i> ' + parseFloat(porcentagem).toFixed(2) + '% (R$ ' + f['diferencial'] + ")");
					}
				},
				error: function () {
					console.log("Erro - Não foi possível extrair dados do banco de dados.");
				},
				async: false
			});

			dataPagamentosMesChart = {
				labels: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
				series: [
					[p_obj['jan'], p_obj['fev'], p_obj['mar'], p_obj['abr'], p_obj['mai'], p_obj['jun'], p_obj['jul'], p_obj['ago'], p_obj['set'], p_obj['out'], p_obj['nov'], p_obj['dez']]
				]
			}, optionsPagamentosMesChart = {
				lineSmooth: Chartist.Interpolation.cardinal({
					tension: 0
				}),
				low: 0,
				high: parseInt(p_obj['maior_valor'], 10) + 500,
				chartPadding: {
					top: 0,
					right: 0,
					bottom: 0,
					left: 0
				},
				plugins: [
					Chartist.plugins.ctPointLabels({
						textAnchor: 'middle',
						labelInterpolationFnc: function (value) { return value }
					})
				]
			};
			var i = new Chartist.Bar("#recebimentos-mes-chart", dataPagamentosMesChart, optionsPagamentosMesChart);
			md.startAnimationForBarChart(i)
			// =-=-=-=-=-=-=-=-=-=-
			// ./Gráfico de pagamentos
			// =-=-=-=-=-=-=-=-=-=-
		}
	},
	initMinimizeSidebar: function () {
		$("#minimizeSidebar").click(function () {
			$(this);
			1 == md.misc.sidebar_mini_active ? ($("body").removeClass("sidebar-mini"), md.misc.sidebar_mini_active = !1) : ($("body").addClass("sidebar-mini"), md.misc.sidebar_mini_active = !0);
			var e = setInterval(function () {
				window.dispatchEvent(new Event("resize"))
			}, 180);
			setTimeout(function () {
				clearInterval(e)
			}, 1e3)
		})
	},
	checkScrollForTransparentNavbar: debounce(function () {
		260 < $(document).scrollTop() ? transparent && (transparent = !1, $(".navbar-color-on-scroll").removeClass("navbar-transparent")) : transparent || (transparent = !0, $(".navbar-color-on-scroll").addClass("navbar-transparent"))
	}, 17),
	initRightMenu: debounce(function () {
		$sidebar_wrapper = $(".sidebar-wrapper"), mobile_menu_initialized ? 991 < $(window).width() && ($sidebar_wrapper.find(".navbar-form").remove(), $sidebar_wrapper.find(".nav-mobile-menu").remove(), mobile_menu_initialized = !1) : ($navbar = $("nav").find(".navbar-collapse").children(".navbar-nav"), mobile_menu_content = "", nav_content = $navbar.html(), nav_content = '<ul class="nav navbar-nav nav-mobile-menu">' + nav_content + "</ul>", navbar_form = $("nav").find(".navbar-form").get(0).outerHTML, $sidebar_nav = $sidebar_wrapper.find(" > .nav"), $nav_content = $(nav_content), $navbar_form = $(navbar_form), $nav_content.insertBefore($sidebar_nav), $navbar_form.insertBefore($nav_content), $(".sidebar-wrapper .dropdown .dropdown-menu > li > a").click(function (e) {
			e.stopPropagation()
		}), window.dispatchEvent(new Event("resize")), mobile_menu_initialized = !0)
	}, 200),
	startAnimationForLineChart: function (e) {
		e.on("draw", function (e) {
			"line" === e.type || "area" === e.type ? e.element.animate({
				d: {
					begin: 600,
					dur: 700,
					from: e.path.clone().scale(1, 0).translate(0, e.chartRect.height()).stringify(),
					to: e.path.clone().stringify(),
					easing: Chartist.Svg.Easing.easeOutQuint
				}
			}) : "point" === e.type && (seq++ , e.element.animate({
				opacity: {
					begin: seq * delays,
					dur: durations,
					from: 0,
					to: 1,
					easing: "ease"
				}
			}))
		}), seq = 0
	},
	startAnimationForBarChart: function (e) {
		e.on("draw", function (e) {
			"bar" === e.type && (seq2++ , e.element.animate({
				opacity: {
					begin: seq2 * delays2,
					dur: durations2,
					from: 0,
					to: 1,
					easing: "ease"
				}
			}))
		}), seq2 = 0
	}
};